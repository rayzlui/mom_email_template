{"version":3,"sources":["logo.svg","jobsCompleted.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MomWorkHelper","props","state","trash","fourth_floor","sanitized_objects","cleaned_rooms","high_touch","mopped","vacuumed","chinese_trash","chinese_fourth_floor","chinese_sanitized_objects","chinese_cleaned_rooms","chinese_mopped","createCopyLists","bind","handleCopy","english","lang","this","keys","Object","render","forEach","x","num","push","string","list","filter","undefined","length","index","key","setState","chinese","phrase","updateKey","location","area","updateFourth","fourthFloor","createCopyFourthFloor","sanitized","cleaned","wiped","complete","text","document","createElement","innerText","body","appendChild","select","execCommand","remove","alert","className","setColor","onClick","toggleKeys","type","onInput","e","addFourthFloor","target","value","createLists","createFourthFloor","React","Component","App","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1604befd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/*\n  clean sanitized all door knobs\n  \n  empty trash in following:\n  -control room a-c\n  -edit booth 1-6\n  -studio a/b\n  -video edit 1-5\n  -media nest\n  -tv media op center\n  -tv radio/maintenance shop\n  -news department cubicles including chairs\n\n  4th floor: \n  -1 in membership\n  -2 by womens bathroom\n  -2 IT help\n  -2 finance\n\n  sanitized: \n  -all microphones\n  -top of speeakers\n  -light switches\n\n  cleaned sanitized removed trash mopped:\n  -5th floor lunchroom/kitchen/restroom\n  -4th floor lunchroom/kitchen/restroom\n\n  wiped + sanitized:\n  -all high touch areas in elevator + lobbies\n\n  vacuumed hallways by restroom and studios\n\n  mopped freight elevator lobby\n*/\n\nimport React from 'react'\n\nexport class MomWorkHelper extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      trash: {},\n      fourth_floor: {},\n      sanitized_objects: {},\n      cleaned_rooms:{},\n      high_touch: true,\n      mopped: {},\n      vacuumed: true,\n      chinese_trash: {},\n      chinese_fourth_floor: {},\n      chinese_sanitized_objects: {},\n      chinese_cleaned_rooms:{},\n      chinese_mopped: {},\n    }\n    this.createCopyLists = this.createCopyLists.bind(this)\n    this.handleCopy = this.handleCopy.bind(this)\n  }\n  createFourthFloor(english){\n    let lang = english ? this.state['fourth_floor'] : this.state['chinese_fourth_floor']\n    let keys = Object.keys(lang)\n    let render = []\n      keys.forEach(x=>{\n        let num = lang[x]\n        if (english){\n          render.push(<li>{`${num} people by ${x}`}</li>)\n        }else{\n          render.push(<li>{`${num} 人們 ${x}`}</li>)\n        }\n      })\n      return <ul>{render}</ul>\n  }\n\n  createCopyFourthFloor(string){\n    let list = this.state['fourth_floor']\n    let keys = Object.keys(list).filter(x=>list[x] !== undefined)\n    if (keys.length===0){\n      return ''\n    }\n    keys.forEach((x, index)=>{\n\n      let num = this.state['fourth_floor'][x]\n      if (index === keys.length-1){\n        string += `${num} people by ${x}.`\n      }else {\n        string += `${num} people by ${x}, `\n      }\n    })\n    return string\n  }\n\n  createCopyLists(string, list){\n    let keys = Object.keys(list).filter(x=>list[x] !== undefined)\n    if (keys.length===0){\n      return ''\n    }\n    keys.forEach((x, index)=>{\n      if (index === keys.length-1){\n        string += `${x}.`\n      }else {\n          string += \n          `${x}, `\n      }\n\n    })\n    return string\n  }\n\n  createLists(list){\n    let keys = Object.keys(list)\n    if (keys.length === 0){\n      return ''\n    }\n    let render = []\n    keys.forEach(x=>{\n      if (list[x]){\n        render.push(<li>{`${x}`}</li>)\n      }\n    })\n    return <ul>{render}</ul>\n  }\n\n  updateKey(list, key){\n    if (key === undefined){\n      if (this.state[`${list}`]){\n        this.setState((state)=>{\n          return state[`${list}`] = false\n        })\n      }else{\n        this.setState((state)=>{\n          return state[`${list}`]= true\n        })\n      }\n    }else{\n    if (this.state[`${list}`][`${key}`]){\n      this.setState((state)=>{\n        return state[`${list}`][`${key}`] = false\n      })\n    }else{\n      this.setState((state)=>{\n        return state[`${list}`][`${key}`] = true\n      })\n    }}\n  }\n\n  toggleKeys(list,key,chinese, phrase){\n    this.updateKey(list, key)\n    this.updateKey(chinese, phrase)\n  }\n\n  updateFourth(location, num, english){\n    if (english){\n      this.setState((state)=>{\n        return state['fourth_floor'][`${location}`] = num\n      })\n    }else{\n      this.setState((state)=>{\n        return state['chinese_fourth_floor'][`${location}`] = num\n      })\n    }\n  }\n\n  addFourthFloor(location, num, area){\n    this.updateFourth(location, num, true)\n    this.updateFourth(area, num, false)\n  }\n\n  setColor(list, area){\n    if (area === undefined ){\n      return this.state[`${list}`] ? 'green' : 'red'\n    }\n    return this.state[`${list}`][`${area}`] ? 'green' : 'red'\n  }\n\n  handleCopy(){\n    let intro = `Today I have done the following:`\n    let trash = this.createCopyLists(`Cleaned + sanitized all door knobs + emptied trash from following: `, this.state['trash'])\n        \n    let fourthFloor = this.createCopyFourthFloor(`Fourth floor had the following: `)\n    \n    let sanitized = this.createCopyLists(`Sanitized following: `,this.state['sanitized_objects'])\n \n    let cleaned = this.createCopyLists(`Cleaned + sanitized + removed trash + mopped: `, this.state['cleaned_rooms'])\n    \n    let wiped = this.state['high_touch'] ? 'Wiped + sanitized all high touch areas in elevator + lobbies.' : ''\n     \n    let mopped = this.createCopyLists(`Mopped the following: `,this.state['mopped'])\n\n    let vacuumed = this.state['vacuumed'] ? 'Vacuumed hallways by restrooms and studios. ' : ''\n  \n    let complete =\n    `${intro} ${trash} ${fourthFloor} ${sanitized} ${cleaned} ${wiped} ${mopped} ${vacuumed}`\n    let text = document.createElement('textarea')\n    text.innerText = complete\n    document.body.appendChild(text)\n    text.select()\n    document.execCommand('copy')\n    text.remove()\n    alert('複製的')\n    \n  }\n\n  \n\n  render(){\n    return(<>\n    <h1>你好媽媽</h1>\n    <section className={'questions'}>\n      <section>\n        <label className='title'>我清空了房間裡的垃圾</label>\n        <button className={this.setColor('trash','Control Room A-C')} onClick={()=>this.toggleKeys('trash', 'Control Room A-C', 'chinese_trash', '控制室A-C')}>控制室A-C</button>\n        <button className={this.setColor('trash','Edit Booth 1-6')} onClick={()=>this.toggleKeys('trash', 'Edit Booth 1-6', 'chinese_trash', '編輯攤位1-6' )}>編輯攤位1-6</button>\n        <button className={this.setColor('trash','Studio A/B')} onClick={()=>this.toggleKeys('trash', 'Studio A/B', 'chinese_trash', '工作室A / B')}>工作室A / B</button>\n        <button className={this.setColor('trash','Video Edit 1-5')} onClick={()=>this.toggleKeys('trash', 'Video Edit 1-5','chinese_trash', '影片編輯1-5')}>影片編輯1-5</button>\n        <button className={this.setColor('trash','Media Ingest')} onClick={()=>this.toggleKeys('trash', 'Media Ingest','chinese_trash', '媒體巢')}>媒體巢</button>\n        <button className={this.setColor('trash','TV Media Op Center')} onClick={()=>this.toggleKeys('trash', 'TV Media Op Center', 'chinese_trash', '電視媒體運營中心')}>電視媒體運營中心</button>\n        <button className={this.setColor('trash','TV Radio/Maintenance Shop')} onClick={()=>this.toggleKeys('trash', 'TV Radio/Maintenance Shop', 'chinese_trash', '電視廣播/維修店')}>電視廣播/維修店</button>\n        <button className={this.setColor('trash','News Department Cubicles including chairs')} onClick={()=>this.toggleKeys('trash', 'News Department Cubicles including chairs', 'chinese_trash', '新聞部隔間，包括椅子')}>新聞部隔間，包括椅子</button>\n      </section>\n      \n      <section className='floors'>\n        <label className='title'>四樓有這麼多人</label>\n        <label>會員船</label>\n        <input type='number' onInput={(e) => this.addFourthFloor('Membership',e.target.value, '會員船')}/>\n        <label>女士浴室</label>\n        <input type='number' onInput={(e) => this.addFourthFloor(\"Women's bathroom\",e.target.value, '女士浴室')}/>\n        <label>通過IT服務台</label>\n        <input type='number' onInput={(e) => this.addFourthFloor(\"IT Help Desk\",e.target.value, '通過IT服務台')}/>\n        <label>通過財務</label>\n        <input type='number' onInput={(e) => this.addFourthFloor(\"Finance\",e.target.value, '通過財務')}/>\n      </section>\n\n      <section>\n        <label className='title'>我洗了這些東西</label>\n        <button className={this.setColor('sanitized_objects', 'all microphones')}  onClick={()=>this.toggleKeys('sanitized_objects', 'all microphones', 'chinese_sanitized_objects', '所有麥克風')}>所有麥克風</button>\n        <button className={this.setColor('sanitized_objects', 'top of speeakers')}  onClick={()=>this.toggleKeys('sanitized_objects', 'top of speeakers', 'chinese_sanitized_objects', '尖頂者')}>尖頂者</button>\n        <button className={this.setColor('sanitized_objects', 'light switches')}  onClick={()=>this.toggleKeys('sanitized_objects', 'light switches', 'chinese_sanitized_objects', '電燈開關')}>電燈開關</button>\n      </section>\n\n      <section>\n        <label className='title'>我洗了飯廳廚房洗手間</label>\n        <button className={this.setColor('cleaned_rooms', '5th floor lunchroom/kitchen/restroom')} onClick={()=>this.toggleKeys('cleaned_rooms', '5th floor lunchroom/kitchen/restroom', 'chinese_cleaned_rooms', '第五層')}>第五層</button>\n        <button className={this.setColor('cleaned_rooms', '4th floor lunchroom/kitchen/restroom')} onClick={()=>this.toggleKeys('cleaned_rooms', '4th floor lunchroom/kitchen/restroom', 'chinese_cleaned_rooms', '四樓')}>四樓</button>\n      </section>\n\n      <section>\n        <label className='title'>我擦拭高觸感區域</label>\n        <button className={this.setColor('high_touch')} onClick={()=>this.toggleKeys('high_touch')}>{!this.state['high_touch'] ? '是' : '沒有'}</button>\n        </section>\n\n      <section>\n        <label className='title'>我吸塵</label>\n        <button className={this.setColor('vacuumed')} onClick={()=>this.toggleKeys('vacuumed')}>{!this.state['vacuumed'] ? '是' : '沒有'}</button>\n      </section>\n\n      <section>\n      <label className='title'>我拖地：</label>\n        <button className={this.setColor('mopped', 'freight elevator')} onClick={()=>this.toggleKeys('mopped', 'freight elevator', 'chinese_mopped', '貨運電梯')}>貨運電梯</button>\n        <button className={this.setColor('mopped', 'bathroom')} onClick={()=>this.toggleKeys('mopped', 'bathroom', 'chinese_mopped', '浴室')}>浴室</button>\n      </section>\n\n    </section>\n   \n    <section className={'chinese_paragraph'}>\n      <article>\n        <p>今天，我做了以下工作：</p>\n        <ol>\n          <li>清潔並消毒所有門把手 + 清空以下垃圾：\n          {this.createLists(this.state['chinese_trash'])}\n\n          </li>\n          <li>四樓有以下設施：\n            {this.createFourthFloor(false)}\n          </li>\n          <li>進行了以下消毒：\n            {this.createLists(this.state['chinese_sanitized_objects'])}\n          </li>\n          <li>清潔+消毒+清除垃圾+拖把：\n            {this.createLists(this.state['chinese_cleaned_rooms'])}\n          </li>\n          {this.state['high_touch'] ? <li>擦淨+消毒了電梯+大堂中的所有高接觸區域</li> : null}\n          <li>拖了以下內容：\n            {this.createLists(this.state['chinese_mopped'])}\n          </li>\n          {this.state['vacuumed'] ? <li>洗手間和工作室清理走廊</li> : null}\n        </ol>\n\n      </article>\n    </section>\n    <section className={'english'}>\n      <article className={'click_to_copy'} onClick={this.handleCopy}>\n        <p>Today I have done the following:</p>\n        <ol>\n          <li>Cleaned + sanitized all door knobs + empty trash from following: \n            {this.createLists(this.state['trash'])}\n\n          </li>\n          <li>\n            Fourth floor had the following:\n            {this.createFourthFloor(true)}\n          </li>\n          <li>\n            Sanitized following:\n            {this.createLists(this.state['sanitized_objects'])}\n          </li>\n          <li>\n            Cleaned + sanitized + removed trash + mopped:\n            {this.createLists(this.state['cleaned_rooms'])}\n          </li>\n          {this.state['high_touch'] ? <li>Wiped + sanitized all high touch areas in elevator + lobbies</li> : null}\n          <li>\n            Mopped the following:\n            {this.createLists(this.state['mopped'])}\n          </li>\n          {this.state['vacuumed'] ? <li>Vacuumed hallways by restrooms and studios</li> : null}\n        </ol>\n\n      </article>\n    </section>\n    </>\n    )\n  }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { MomWorkHelper } from './jobsCompleted';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    \n      <MomWorkHelper />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}